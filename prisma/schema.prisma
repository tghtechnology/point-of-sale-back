// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Categoria {
  id        Int        @id @default(autoincrement())
  nombre    String     @db.VarChar(255)
  color     String     @db.VarChar(255)
  estado    Boolean
  articulos Articulo[]

  @@map("categoria")
}

model Descuento {
  id              Int           @id @default(autoincrement())
  nombre          String        @db.VarChar(255)
  tipo_descuento  tipoDescuento
  valor           Decimal       @db.Decimal(10, 2)
  valor_calculado Decimal       @db.Decimal(10, 2)
  estado          Boolean
  ventas          Venta[]

  @@map("descuento")
}

enum tipoDescuento {
  PORCENTAJE
  MONTO
}

model Impuesto {
  id            Int          @id @default(autoincrement())
  nombre        String       @db.VarChar(255)
  tasa          Decimal      @db.Decimal(10, 2)
  tipo_impuesto tipoImpuesto
  estado        Boolean
  ventas        Venta[]
}

enum tipoImpuesto {
  Incluido_en_el_precio
  Anadido_al_precio
}

model Usuario {
  id                       Int       @id @default(autoincrement())
  nombre                   String    @db.VarChar(255)
  email                    String    @unique @db.VarChar(255)
  cargo                    String    @db.VarChar(255)
  telefono                 String    @db.VarChar(255)
  password                 String    @db.VarChar(255)
  pais                     String?   @db.VarChar(255)
  rol                      Rol
  estado                   Boolean   @db.Bit(1)
  eliminado_temporal_fecha DateTime?

  resetTokens ResetToken[]
  sesiones    Sesion[]
  ventas      Venta[]

  @@map("usuario")
}

enum Rol {
  Propietario
  Empleado
}

model Articulo {
  id           Int            @id @default(autoincrement())
  nombre       String         @db.VarChar(255)
  tipo_venta   TipoVenta
  precio       Decimal?       @db.Decimal(10, 2)
  ref          String         @db.VarChar(255)
  color        String         @db.VarChar(255)
  imagen       String?        @db.VarChar(255)
  id_categoria Int?           @map("id_categoria") @db.Int
  estado       Boolean
  detalles     DetalleVenta[]

  categoria Categoria? @relation(fields: [id_categoria], references: [id])

  @@map("articulo")
}

enum TipoVenta {
  Peso
  Unidad
}

model ResetToken {
  id         Int      @id @default(autoincrement())
  token      String   @db.VarChar(255)
  expiracion DateTime
  usuario_id Int      @map("usuario_id")
  usuario    Usuario  @relation(fields: [usuario_id], references: [id])

  @@map("reset_tokens")
}

model Sesion {
  id         Int      @id @default(autoincrement())
  usuario_id Int      @map("usuario_id")
  token      String   @db.VarChar(255)
  expiracion DateTime

  usuario Usuario @relation(fields: [usuario_id], references: [id])

  @@map("sesion")
}

model Cliente {
  id            Int     @id @default(autoincrement())
  nombre        String  @db.VarChar(255)
  email         String  @unique @db.VarChar(255)
  telefono      String  @db.VarChar(255)
  direccion     String  @db.VarChar(255)
  ciudad        String  @db.VarChar(255)
  region        String  @db.VarChar(255)
  codigo_postal String  @db.VarChar(255)
  pais          String  @db.VarChar(255)
  estado        Boolean
  ventas        Venta[]

  @@map("cliente")
}

model Recibo {
  id Int @id @default(autoincrement())
  fecha_creacion DateTime @default(now())
  ref String @db.VarChar(100)
  id_venta Int @db.Int @map("id_venta")

  venta Venta? @relation(fields: [id_venta], references: [id])
}
model DetalleVenta {
  id         Int      @id @default(autoincrement())
  cantidad   Int
  subtotal   Decimal  @db.Decimal(10, 2)
  articulo   Articulo @relation(fields: [articuloId], references: [id])
  articuloId Int
  venta      Venta    @relation(fields: [ventaId], references: [id])
  ventaId    Int

  @@map("detalleVenta")
}

model Venta {
  id            Int      @id @default(autoincrement())
  subtotal      Decimal @db.Decimal(10,2)
  total         Decimal @db.Decimal(10,2)
  tipoPago      String
  impuesto      Impuesto? @relation(fields: [impuestoId], references: [id])
  descuento     Descuento? @relation(fields: [descuentoId], references: [id])
  cliente       Cliente   @relation(fields: [clienteId], references: [id])
  usuario       Usuario   @relation(fields: [usuarioId], references: [id])
  dineroRecibido Decimal @db.Decimal(10,2) 
  cambio        Decimal @db.Decimal(10,2)
  detalles      DetalleVenta[]
  impuestoId    Int?
  descuentoId   Int?
  clienteId     Int
  usuarioId     Int

  recibo Recibo[]
}

enum TipoPago {
  EFECTIVO
  TARJETA
}
